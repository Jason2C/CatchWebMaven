<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- <bean name="/listAccounts.html" class="bigbank.web.ListAccounts"> <constructor-arg 
		ref="bankService"/> </bean> <bean name="/post.html" class="bigbank.web.PostAccounts"> 
		<constructor-arg ref="bankService"/> </bean> -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="prefix" value="/WEB-INF/jsp/" /> -->
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 2.启动 AspectJ支持 -->
	<aop:aspectj-autoproxy />

	<!-- Targets -->
	<!-- <bean id="stuImp" class="aopAspectJ.StuImp" /> -->

	<!-- Advices -->
	<!-- <bean class="aopAspectJ.AllAdvice" /> -->


	<!-- 配置Spring经典AOP -->
	<!-- Targets -->
	<!-- <bean id="ha" class="aop.HeroA"> <property name="name" value="刘备" /> 
		</bean> -->

	<!-- advices 通知 -->
	<!-- <bean id="sudAdv" class="aop.advc.ActorASrundAdv" /> <bean id="bfAdvc" 
		class="aop.advc.ActorBfAdvc" /> --><!-- <bean id="numFmt" class="aop.advc.NumFmtAdvc" /> -->

	<!-- Advisor 通知代理者 -->
	<!-- <bean id="advisor1" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"> 
		<property name="pattern"> <value>aop.HeroA.fight</value> </property> <property 
		name="advice" ref="sudAdv"></property> </bean> -->


	<!-- 织入Waving:把advice和target关联 -->
	<!-- <bean id="proxy_ha" class="org.springframework.aop.framework.ProxyFactoryBean"> 
		<property name="proxyInterfaces"> <value>aop.IActor</value> </property> <property 
		name="target" ref="ha" /> <property name="interceptorNames"> <list> <value>sudAdv</value> 
		<value>bfAdvc</value> </list> </property> </bean> -->

	<!-- <aop:config> <aop:aspect id="TestAspect" ref="aspectBean"> 配置com.spring.service包下所有类或接口的所有方法 
		<aop:pointcut id="businessService" expression="execution(* com.spring.service.*.*(..))" 
		/> <aop:before pointcut-ref="businessService" method="doBefore" /> <aop:after 
		pointcut-ref="businessService" method="doAfter" /> <aop:around pointcut-ref="businessService" 
		method="doAround" /> <aop:after-throwing pointcut-ref="businessService" method="doThrowing" 
		throwing="ex" /> </aop:aspect> </aop:config> -->

	<!-- <bean id="aspectBean" class="com.spring.aop.TestAspect" /> <bean id="aService" 
		class="com.spring.service.AServiceImpl"></bean> <bean id="bService" class="com.spring.service.BServiceImpl"></bean> -->


	<!-- 配置数据源 使用的是Druid数据源 -->
	<!-- <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		init-method="init" destroy-method="close"> <property name="url" value="${jdbc_url}" 
		/> <property name="username" value="${jdbc_user}" /> <property name="password" 
		value="${jdbc_password}" /> 初始化连接大小 <property name="initialSize" value="0" 
		/> 连接池最大使用连接数量 <property name="maxActive" value="20" /> 连接池最小空闲 <property 
		name="minIdle" value="0" /> 获取连接最大等待时间 <property name="maxWait" value="60000" 
		/> <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
		value="33" /> 用来检测有效sql <property name="validationQuery" value="${validationQuery}" 
		/> <property name="testOnBorrow" value="false" /> <property name="testOnReturn" 
		value="false" /> <property name="testWhileIdle" value="true" /> 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
		<property name="timeBetweenEvictionRunsMillis" value="60000" /> 配置一个连接在池中最小生存的时间，单位是毫秒 
		<property name="minEvictableIdleTimeMillis" value="25200000" /> 打开removeAbandoned功能 
		<property name="removeAbandoned" value="true" /> 1800秒，也就是30分钟 <property 
		name="removeAbandonedTimeout" value="1800" /> 关闭abanded连接时输出错误日志 <property 
		name="logAbandoned" value="true" /> 监控数据库 <property name="filters" value="mergeStat" 
		/> </bean> -->

	
	

	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="basePackage" value="org.andy.shop.dao" /> <property name="sqlSessionFactoryBeanName" 
		value="sqlSessionFactory" /> </bean> -->

	<!-- 配置事务管理器 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->

	<!-- 注解方式配置事物 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 拦截器方式配置事物 -->
	<!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="insert*" propagation="REQUIRED" /> <tx:method 
		name="update*" propagation="REQUIRED" /> <tx:method name="delete*" propagation="REQUIRED" 
		/> <tx:method name="get*" propagation="SUPPORTS" read-only="true" /> <tx:method 
		name="find*" propagation="SUPPORTS" read-only="true" /> <tx:method name="select*" 
		propagation="SUPPORTS" read-only="true" /> </tx:attributes> </tx:advice> -->
	<!-- Spring aop事务管理 -->
	<!-- <aop:config> <aop:pointcut id="transactionPointcut" expression="execution(* 
		org.andy.shop.service..*Impl.*(..))" /> <aop:advisor pointcut-ref="transactionPointcut" 
		advice-ref="transactionAdvice" /> </aop:config> -->

</beans>