<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd  
     http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/mvc  
     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<import resource="springMVC.xml" />
	<import resource="spring-mybatis.xml" />
	<!-- 引入jdbc配置文件
	<context:property-placeholder location="classpath:jdbc.properties" />

	该 BeanPostProcessor 将自动起作用，对标注 @Autowired 的 Bean 进行自动注入
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	以下是返回json配置
	扫描文件（自动将servicec层注入）
	<context:annotation-config />
	<context:component-scan base-package="com" />
	创建jdbc数据源
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc_driver}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_user}" />
		<property name="password" value="${jdbc_password}" />
		<property name="initialSize" value="${initialSize}" /> <property name="maxActive" 
			value="${maxActive}" /> <property name="maxIdle" value="${maxIdle}" /> <property 
			name="minIdle" value="${minIdle}" />
	</bean>
	myBatis文件
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.mybatisDemo.entity" />
		<property name="mapperLocations" value="classpath:com.mybatisDemo.mapper*.xml" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	扫描basePackage下所有以@MyBatisRepository标识的 接口
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mybatisDemo.mapper" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean> -->
	<!-- json -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" 
		/> <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJacksonHttpMessageConverter" 
		/> </list> </property> </bean> <bean id="mappingJacksonHttpMessageConverter" 
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		</list> </property> </bean> -->
	<!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<property name="order" value="1" /> <property name="mediaTypes"> <map> <entry 
		key="json" value="application/json" /> </map> </property> <property name="defaultViews"> 
		<list> <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" 
		/> </list> </property> <property name="ignoreAcceptHeader" value="true" /> 
		</bean> -->
</beans>